@model BugTracker.Models.Ticket
@using BugTracker.Helpers
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Details";
    var ticketHelper = new TicketHelper();
}

<h2>Details</h2>

<div>
    <h4>Ticket</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Project.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Project.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketPriorityId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketPriorityId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketStatusId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketStatusId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.TicketTypeId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TicketTypeId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.SubmitterId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.SubmitterId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.DeveloperId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.DeveloperId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Issue)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Issue)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IssueDescription)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IssueDescription)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Created)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Created)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Updated)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Updated)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsResolved)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsResolved)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.IsArchived)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.IsArchived)
        </dd>

    </dl>
</div>

<p>There are @Model.Comments.Count comments on this ticket.</p>
@*@if (Model.Comments.Count != 0)
    {
        <h4>No Comments have been made for this ticket.</h4>
    }*@

@*@if(User.IsInRole("Admin") ||
    (User.IsInRole("Developer") && Model.DeveloperId == User.Identity.GetUserId()) ||
    (User.IsInRole("Submitter") && Model.SubmitterId == User.Identity.GetUserId()) ||
    (User.IsInRole("Project Manager") && projectHelper.IsUserOnProject(User.Identity.GetUserId(), Model.ProjectId)))*@

@if (ticketHelper.CanMakeComment(Model.Id))
{
    using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>TicketComment</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.Hidden("TicketId", Model.Id)
            <div class="form-group">
                @Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control" } })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
}


<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id }) |
    @Html.ActionLink("Back to List", "Index")
</p>
